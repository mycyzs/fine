# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AccountInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('user_name', models.CharField(max_length=50)),
                ('password', models.CharField(max_length=20)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('when_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('when_modified', models.DateTimeField(auto_now=True, null=True)),
                ('created_by', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CheckItem',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=200, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('item_type', models.CharField(max_length=10, null=True, blank=True)),
                ('when_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('script', models.TextField(null=True, blank=True)),
                ('script_type', models.CharField(max_length=10, null=True, blank=True)),
                ('can_modify', models.IntegerField(null=True, blank=True)),
                ('default_col', models.CharField(max_length=50, null=True, blank=True)),
                ('default_value', models.CharField(max_length=50, null=True, blank=True)),
                ('compare_way', models.CharField(max_length=50, null=True, blank=True)),
                ('db_type', models.CharField(max_length=20, null=True, blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('compare_script', models.TextField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='CheckTask',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('task_name', models.CharField(max_length=50, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('when_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('db_type', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CheckTaskDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('checktask', models.ForeignKey(to='home_application.CheckTask')),
            ],
        ),
        migrations.CreateModel(
            name='CheckTaskTimeSet',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('first_time', models.CharField(max_length=20, null=True, blank=True)),
                ('next_time', models.CharField(max_length=20, null=True, blank=True)),
                ('interval', models.IntegerField(null=True, blank=True)),
                ('time_type', models.CharField(max_length=10, null=True, blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CheckTemplate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('template_name', models.CharField(max_length=50)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('is_built_in', models.BooleanField(default=False)),
                ('when_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('last_modified', models.DateTimeField(null=True, blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('db_type', models.CharField(max_length=10, null=True, blank=True)),
                ('created_by', models.ForeignKey(related_name='created_by', to=settings.AUTH_USER_MODEL)),
                ('modified_by', models.ForeignKey(related_name='modified_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DataPumpDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('db_type', models.CharField(max_length=10, null=True, blank=True)),
                ('dump_type', models.CharField(max_length=10, null=True, blank=True)),
                ('dump_sql', models.TextField(null=True, blank=True)),
                ('in_or_out', models.BooleanField(default=True)),
                ('is_success', models.BooleanField(default=False)),
                ('dumpfile_name', models.CharField(max_length=80, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DbCluster',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('cluster_name', models.CharField(max_length=50, unique=True, null=True, blank=True)),
                ('cluster_vip', models.CharField(max_length=50, unique=True, null=True, blank=True)),
                ('port', models.IntegerField(null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='DbInstance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('instance_name', models.CharField(max_length=50, null=True, blank=True)),
                ('ip', models.CharField(max_length=50, null=True, blank=True)),
                ('app_id', models.CharField(max_length=10)),
                ('source', models.CharField(max_length=10)),
                ('port', models.IntegerField(null=True, blank=True)),
                ('role', models.CharField(max_length=50, null=True, blank=True)),
                ('status', models.CharField(max_length=50, null=True, blank=True)),
                ('base_dir', models.CharField(max_length=200, null=True, blank=True)),
                ('when_created', models.CharField(max_length=50, null=True, blank=True)),
                ('update_time', models.CharField(max_length=50, null=True, blank=True)),
                ('dbcluster', models.ForeignKey(to='home_application.DbCluster', on_delete=django.db.models.deletion.PROTECT)),
            ],
        ),
        migrations.CreateModel(
            name='InceptionParam',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('param_name', models.CharField(max_length=50)),
                ('old_value', models.CharField(max_length=50, null=True)),
                ('new_value', models.CharField(max_length=50, null=True)),
                ('comment', models.CharField(max_length=500, null=True)),
                ('options', models.CharField(max_length=30, null=True)),
                ('default', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LVSInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ip', models.CharField(max_length=50, null=True, blank=True)),
                ('ddbip', models.CharField(max_length=50, null=True, blank=True)),
                ('ddbport', models.CharField(max_length=200, null=True, blank=True)),
                ('network_name', models.CharField(max_length=50, null=True, blank=True)),
                ('role', models.CharField(max_length=50, null=True, blank=True)),
                ('app_id', models.CharField(max_length=10)),
                ('source', models.CharField(max_length=10)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MHAManager',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ip', models.CharField(max_length=50, unique=True, null=True, blank=True)),
                ('default_dir', models.CharField(max_length=200, null=True, blank=True)),
                ('role', models.CharField(max_length=50, null=True, blank=True)),
                ('version', models.CharField(max_length=50, null=True, blank=True)),
                ('app_id', models.CharField(max_length=10)),
                ('source', models.CharField(max_length=10)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MHAProcessInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('network_name', models.CharField(max_length=50, null=True, blank=True)),
                ('process_status', models.CharField(max_length=50, null=True, blank=True)),
                ('ssh_status', models.CharField(max_length=50, null=True, blank=True)),
                ('repl_status', models.CharField(max_length=50, null=True, blank=True)),
                ('dbcluster', models.ForeignKey(to='home_application.DbCluster')),
            ],
        ),
        migrations.CreateModel(
            name='MiddleInstallinfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('instance_name', models.CharField(max_length=50, null=True, blank=True)),
                ('ip', models.CharField(max_length=50, null=True, blank=True)),
                ('port', models.IntegerField()),
                ('software_path', models.CharField(max_length=80, null=True, blank=True)),
                ('is_success', models.BooleanField(default=False)),
                ('fail_reason', models.CharField(max_length=200, null=True, blank=True)),
                ('package_version', models.CharField(max_length=80, null=True, blank=True)),
                ('vip', models.CharField(max_length=50, null=True, blank=True)),
                ('network_name', models.CharField(max_length=80, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MycnfTemplate',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('mysql_version', models.CharField(max_length=20, null=True, blank=True)),
                ('template_name', models.CharField(max_length=50, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('when_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MycnfTemplateEntry',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('param_value', models.CharField(max_length=400, null=True, blank=True)),
                ('mycnftemplate', models.ForeignKey(to='home_application.MycnfTemplate')),
            ],
        ),
        migrations.CreateModel(
            name='MysqlCluster',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('param_path', models.CharField(max_length=200, null=True, blank=True)),
                ('dbcluster', models.ForeignKey(to='home_application.DbCluster')),
                ('mhamanager', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home_application.MHAManager', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MysqlInstallinfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('instance_name', models.CharField(max_length=50, null=True, blank=True)),
                ('ip', models.CharField(max_length=50, null=True, blank=True)),
                ('port', models.IntegerField()),
                ('param_dir', models.CharField(max_length=80, null=True, blank=True)),
                ('param_module', models.CharField(max_length=50, null=True, blank=True)),
                ('user_created_sql', models.TextField(null=True, blank=True)),
                ('is_success', models.BooleanField(default=False)),
                ('fail_reason', models.CharField(max_length=200, null=True, blank=True)),
                ('package_version', models.CharField(max_length=80, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MysqlInstance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('mysql_version', models.CharField(max_length=50, null=True, blank=True)),
                ('data_dir', models.CharField(max_length=200, null=True, blank=True)),
                ('is_read_only', models.BooleanField(verbose_name=False)),
                ('is_binlog', models.BooleanField(verbose_name=False)),
                ('is_slow_log', models.BooleanField(verbose_name=False)),
                ('backup_path', models.CharField(max_length=200, null=True, blank=True)),
                ('param_dir', models.CharField(max_length=200, null=True, blank=True)),
                ('start_type', models.CharField(max_length=10, null=True, blank=True)),
                ('mysql_size', models.CharField(max_length=50, null=True, blank=True)),
                ('charset', models.CharField(max_length=20, null=True, blank=True)),
                ('mysql_engine', models.CharField(max_length=20, null=True, blank=True)),
                ('innodb_buffer_pool_size', models.CharField(max_length=20, null=True, blank=True)),
                ('innodb_buffer_pool_instances', models.CharField(max_length=20, null=True, blank=True)),
                ('innodb_log_file_size', models.CharField(max_length=20, null=True, blank=True)),
                ('innodb_log_files_in_group', models.CharField(max_length=20, null=True, blank=True)),
                ('max_connections', models.CharField(max_length=20, null=True, blank=True)),
                ('socket_dir', models.CharField(max_length=200, null=True, blank=True)),
                ('db_name', models.TextField(null=True, blank=True)),
                ('dbinstance', models.ForeignKey(to='home_application.DbInstance')),
            ],
        ),
        migrations.CreateModel(
            name='MysqlParameter',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('mysql_version', models.CharField(default=b'all', max_length=20, null=True, blank=True)),
                ('param_key', models.CharField(max_length=100, null=True, blank=True)),
                ('param_value', models.CharField(max_length=400, null=True, blank=True)),
                ('param_type', models.CharField(max_length=20, null=True, blank=True)),
                ('dynamic', models.BooleanField(default=True)),
                ('readonly', models.BooleanField(default=False)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='MysqlUpgrade',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('old_version', models.CharField(max_length=50, null=True, blank=True)),
                ('new_version', models.CharField(max_length=50, null=True, blank=True)),
                ('install_dir', models.CharField(max_length=80, null=True, blank=True)),
                ('is_change_link', models.BooleanField(default=False)),
                ('dbinstance', models.ForeignKey(to='home_application.DbInstance')),
            ],
        ),
        migrations.CreateModel(
            name='OperateDict',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('first_menu', models.CharField(max_length=50)),
                ('second_menu', models.CharField(max_length=50)),
                ('en_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OperateLog',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('operate_type', models.CharField(max_length=50, null=True, blank=True)),
                ('is_success', models.BooleanField(default=False)),
                ('operate_context', models.TextField(null=True, blank=True)),
                ('when_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('finish_time', models.DateTimeField(null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('created_by', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OracleCluster',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('is_cluster', models.BooleanField(verbose_name=True)),
                ('dns_name', models.CharField(max_length=50, null=True, blank=True)),
                ('status', models.CharField(max_length=50, null=True, blank=True)),
                ('db_version', models.CharField(max_length=50, null=True, blank=True)),
                ('db_unique_name', models.CharField(max_length=50, null=True, blank=True)),
                ('scan_ip2', models.CharField(max_length=20, null=True)),
                ('scan_ip3', models.CharField(max_length=20, null=True)),
                ('dbcluster', models.ForeignKey(to='home_application.DbCluster')),
            ],
        ),
        migrations.CreateModel(
            name='OracleInstance',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('db_vip', models.CharField(max_length=50, null=True, blank=True)),
                ('service_names', models.CharField(max_length=200, null=True, blank=True)),
                ('up_time', models.DateTimeField(null=True, blank=True)),
                ('param_path', models.CharField(max_length=100, null=True, blank=True)),
                ('private_ip', models.CharField(max_length=50, null=True, blank=True)),
                ('db_name', models.CharField(max_length=50, null=True)),
                ('dbinstance', models.ForeignKey(to='home_application.DbInstance')),
            ],
        ),
        migrations.CreateModel(
            name='OracleSqlCheck',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('keyword', models.CharField(max_length=200)),
                ('is_check', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='OracleSqlRule',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('rule_name', models.CharField(max_length=50, null=True, blank=True)),
                ('rule_reg', models.CharField(max_length=200, null=True, blank=True)),
                ('enabled', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='PlatformAccount',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('user_name', models.CharField(max_length=20, null=True, blank=True)),
                ('password', models.CharField(max_length=20, null=True, blank=True)),
                ('when_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('default_privileges', models.CharField(max_length=100, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='QSInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ip', models.CharField(max_length=50, null=True, blank=True)),
                ('port', models.IntegerField(null=True, blank=True)),
                ('vip', models.CharField(max_length=50, null=True, blank=True)),
                ('network_name', models.CharField(max_length=50, null=True, blank=True)),
                ('role', models.CharField(max_length=50, null=True, blank=True)),
                ('software_path', models.CharField(max_length=100, null=True, blank=True)),
                ('version', models.CharField(max_length=20, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('app_id', models.CharField(max_length=10)),
                ('source', models.CharField(max_length=10)),
                ('url', models.CharField(max_length=50)),
                ('joinkp', models.BooleanField(default=True)),
                ('status', models.CharField(max_length=50, null=True, blank=True)),
                ('when_created', models.CharField(max_length=50, null=True, blank=True)),
                ('update_time', models.CharField(max_length=50, null=True, blank=True)),
                ('lvsinfo', models.ForeignKey(on_delete=django.db.models.deletion.SET_NULL, blank=True, to='home_application.LVSInfo', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='QsParameter',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('ddb_version', models.CharField(default=b'4.6.2', max_length=20, null=True, blank=True)),
                ('ddb_role', models.CharField(max_length=20, null=True, blank=True)),
                ('param_key', models.CharField(max_length=100, null=True, blank=True)),
                ('param_value', models.CharField(max_length=400, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('key', models.CharField(max_length=45, unique=True, null=True, blank=True)),
                ('value', models.CharField(max_length=500, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('can_delete', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SqlTask',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sql_text', models.TextField(null=True, blank=True)),
                ('sys_id', models.CharField(max_length=10, null=True, blank=True)),
                ('task_status', models.CharField(max_length=10, null=True)),
                ('is_ddb', models.BooleanField(default=False)),
                ('db_type', models.CharField(max_length=20, null=True)),
                ('start_time', models.DateTimeField(null=True, blank=True)),
                ('checktasktimeset', models.ForeignKey(to='home_application.CheckTaskTimeSet')),
                ('operatelog', models.ForeignKey(to='home_application.OperateLog')),
            ],
        ),
        migrations.CreateModel(
            name='SqlTaskDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('finish_time', models.DateTimeField(null=True, blank=True)),
                ('is_success', models.BooleanField(default=False)),
                ('error_info', models.CharField(max_length=400, null=True, blank=True)),
                ('rollback_sql', models.TextField(null=True, blank=True)),
                ('dbcluster', models.ForeignKey(blank=True, to='home_application.DbCluster', null=True)),
                ('dbinstance', models.ForeignKey(blank=True, to='home_application.DbInstance', null=True)),
                ('qsinfo', models.ForeignKey(blank=True, to='home_application.QSInfo', null=True)),
                ('sqltask', models.ForeignKey(to='home_application.SqlTask')),
            ],
        ),
        migrations.CreateModel(
            name='SysName',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('sys_name', models.CharField(unique=True, max_length=50)),
                ('sys_code', models.CharField(unique=True, max_length=20)),
                ('is_control', models.BooleanField(default=True)),
                ('department', models.CharField(max_length=50, null=True, blank=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('db_type', models.CharField(max_length=10)),
                ('first_owner', models.ForeignKey(related_name='first_owner', to=settings.AUTH_USER_MODEL)),
                ('second_owner', models.ForeignKey(related_name='second_owner', to=settings.AUTH_USER_MODEL, null=True)),
                ('third_owner', models.ForeignKey(related_name='third_owner', to=settings.AUTH_USER_MODEL, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaskReport',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('checktask', models.ForeignKey(to='home_application.CheckTask')),
                ('operatelog', models.ForeignKey(to='home_application.OperateLog')),
            ],
        ),
        migrations.CreateModel(
            name='TaskReportDbDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('comment', models.CharField(max_length=200, null=True, blank=True)),
                ('is_success', models.BooleanField(default=False)),
                ('db_id', models.IntegerField()),
                ('check_role', models.CharField(max_length=20, null=True, blank=True)),
                ('taskreport', models.ForeignKey(to='home_application.TaskReport')),
            ],
        ),
        migrations.CreateModel(
            name='TaskReportItemDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('real_value', models.TextField()),
                ('shell_compare_value', models.CharField(max_length=500, null=True, blank=True)),
                ('is_success', models.BooleanField(default=False)),
                ('is_warning', models.BooleanField(default=False)),
                ('error_info', models.CharField(max_length=500, null=True, blank=True)),
                ('compare_way', models.CharField(max_length=200, null=True, blank=True)),
                ('default_value', models.CharField(max_length=200, null=True, blank=True)),
                ('default_col', models.CharField(max_length=200, null=True, blank=True)),
                ('checkitem', models.ForeignKey(to='home_application.CheckItem')),
                ('reportdb', models.ForeignKey(to='home_application.TaskReportDbDetail')),
            ],
        ),
        migrations.CreateModel(
            name='TemplateDetail',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('default_col', models.CharField(max_length=50, null=True, blank=True)),
                ('compare_way', models.CharField(max_length=50, null=True, blank=True)),
                ('value', models.CharField(max_length=200, null=True, blank=True)),
                ('is_checked', models.BooleanField(default=True)),
                ('compare_script', models.CharField(max_length=500, null=True, blank=True)),
                ('checkitem', models.ForeignKey(to='home_application.CheckItem')),
                ('checktemplate', models.ForeignKey(to='home_application.CheckTemplate')),
            ],
        ),
        migrations.AddField(
            model_name='qsinfo',
            name='sysname',
            field=models.ForeignKey(to='home_application.SysName', on_delete=django.db.models.deletion.PROTECT),
        ),
        migrations.AddField(
            model_name='mysqlupgrade',
            name='operatelog',
            field=models.ForeignKey(to='home_application.OperateLog'),
        ),
        migrations.AddField(
            model_name='mysqlinstallinfo',
            name='operatelog',
            field=models.ForeignKey(to='home_application.OperateLog'),
        ),
        migrations.AddField(
            model_name='mycnftemplateentry',
            name='paramItem',
            field=models.ForeignKey(to='home_application.MysqlParameter'),
        ),
        migrations.AddField(
            model_name='middleinstallinfo',
            name='operatelog',
            field=models.ForeignKey(to='home_application.OperateLog'),
        ),
        migrations.AddField(
            model_name='dbcluster',
            name='sysname',
            field=models.ForeignKey(to='home_application.SysName', on_delete=django.db.models.deletion.PROTECT),
        ),
        migrations.AddField(
            model_name='datapumpdetail',
            name='dbinstance',
            field=models.ForeignKey(to='home_application.DbInstance'),
        ),
        migrations.AddField(
            model_name='datapumpdetail',
            name='operatelog',
            field=models.ForeignKey(to='home_application.OperateLog'),
        ),
        migrations.AddField(
            model_name='checktaskdetail',
            name='checktemplate',
            field=models.ForeignKey(to='home_application.CheckTemplate', on_delete=django.db.models.deletion.PROTECT),
        ),
        migrations.AddField(
            model_name='checktaskdetail',
            name='dbcluster',
            field=models.ForeignKey(to='home_application.DbCluster', null=True),
        ),
        migrations.AddField(
            model_name='checktaskdetail',
            name='dbinstance',
            field=models.ForeignKey(to='home_application.DbInstance', null=True),
        ),
        migrations.AddField(
            model_name='checktask',
            name='checktasktimeset',
            field=models.ForeignKey(to='home_application.CheckTaskTimeSet'),
        ),
        migrations.AddField(
            model_name='checktask',
            name='created_by',
            field=models.ForeignKey(to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accountinfo',
            name='sysname',
            field=models.ForeignKey(to='home_application.SysName', on_delete=django.db.models.deletion.PROTECT),
        ),
    ]
